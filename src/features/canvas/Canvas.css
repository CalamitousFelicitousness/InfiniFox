.canvas-container {
  position: relative;
  flex-grow: 1;
  overflow: hidden;
  background-color: var(--color-background-canvas);
  background-image: 
    linear-gradient(45deg, var(--custom-canvas-grid-color) 25%, transparent 25%),
    linear-gradient(-45deg, var(--custom-canvas-grid-color) 25%, transparent 25%),
    linear-gradient(45deg, transparent 75%, var(--custom-canvas-grid-color) 75%),
    linear-gradient(-45deg, transparent 75%, var(--custom-canvas-grid-color) 75%);
  background-size: var(--custom-canvas-grid-size) var(--custom-canvas-grid-size);
  background-position: 0 0, 0 calc(var(--custom-canvas-grid-size) / 2), calc(var(--custom-canvas-grid-size) / 2) calc(var(--custom-canvas-grid-size) / -2), calc(var(--custom-canvas-grid-size) / -2) 0px;
}

/* Zoom controls moved to DraggableZoomControls component */

/* Drag and drop overlay */
.canvas-container.dragging-file::before {
  content: '';
  position: absolute;
  inset: 0;
  background-color: var(--custom-canvas-selection-opacity);
  border: 3px dashed var(--color-primary-500);
  border-radius: var(--radius-base);
  pointer-events: none;
  z-index: var(--z-modal);
}



/* Selection mode overlay */
.canvas-container.selection-mode {
  cursor: crosshair;
}

.selection-mode-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0.8), transparent);
  z-index: var(--z-overlay);
  pointer-events: none;
  padding: var(--spacing-4);
}

.selection-mode-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--spacing-2);
}

.selection-mode-header h3 {
  margin: 0;
  color: var(--color-text-on-dark);
  font-size: var(--font-size-lg);
  text-transform: capitalize;
}

.cancel-selection-btn {
  pointer-events: all;
  padding: var(--spacing-2) var(--spacing-4);
  background-color: var(--custom-glass-bg);
  border: 1px solid var(--custom-glass-border);
  color: var(--color-text-on-dark);
  border-radius: var(--radius-sm);
  cursor: pointer;
  transition: var(--transition-all);
}

.cancel-selection-btn:hover {
  background-color: var(--color-surface-hover);
  border-color: var(--color-primary-400);
}

.selection-mode-hint {
  color: var(--color-text-secondary);
  font-size: var(--font-size-sm);
}

.canvas-container.selection-mode .konvajs-content {
  cursor: pointer !important;
}

/* Drawing mode styles */
.canvas-container.drawing-mode {
  cursor: crosshair;
}

.canvas-container.drawing-mode .konvajs-content {
  cursor: crosshair !important;
}

.drawing-mode-indicator {
  position: absolute;
  top: var(--spacing-4);
  left: 50%;
  transform: translateX(-50%);
  z-index: var(--z-overlay);
  display: flex;
  align-items: center;
  gap: var(--spacing-4);
  background-color: var(--color-surface-primary);
  padding: var(--spacing-2) var(--spacing-4);
  border-radius: var(--radius-base);
  border: 1px solid var(--color-primary-500);
  box-shadow: var(--shadow-glow-sm);
}

.drawing-mode-badge {
  color: var(--color-primary-500);
  font-weight: var(--font-weight-bold);
  font-size: var(--font-size-sm);
}

.drawing-tool-info {
  color: var(--color-text-secondary);
  font-size: var(--font-size-xs);
  padding-left: var(--spacing-4);
  border-left: 1px solid var(--color-border-secondary);
}

/* Canvas toolbar moved to DraggableCanvasToolbar component */

/* Pan mode styles */
.canvas-container.pan-mode {
  cursor: grab !important;
}

.canvas-container.pan-mode .konvajs-content {
  cursor: grab !important;
}

/* When actively panning */
.canvas-container.pan-mode.panning {
  cursor: grabbing !important;
}

.canvas-container.pan-mode.panning .konvajs-content {
  cursor: grabbing !important;
}
