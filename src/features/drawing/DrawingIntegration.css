/* DrawingIntegration.css - Styles for different integration methods with Theme Tokens */

/* Tab Integration */
.drawing-tab-container {
  width: 100%;
  height: 100%;
  position: relative;
}

/* Modal Integration */
.drawing-modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--color-overlay-heavy);
  backdrop-filter: var(--backdrop-blur-lg);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: var(--z-modal-overlay);
  animation: fadeIn var(--duration-md) var(--ease-out);
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.drawing-modal {
  width: 90vw;
  height: 90vh;
  max-width: 1400px;
  max-height: 900px;
  background: var(--custom-glass-bg);
  border-radius: var(--radius-2xl);
  overflow: hidden;
  position: relative;
  box-shadow:
    var(--shadow-modal),
    0 0 0 1px var(--color-border-subtle);
  animation: slideUp var(--duration-lg) var(--ease-spring);
}

@keyframes slideUp {
  from {
    transform: translateY(100px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.modal-close {
  position: absolute;
  top: var(--spacing-5);
  right: var(--spacing-5);
  width: 36px;
  height: 36px;
  border-radius: var(--radius-md);
  background-color: var(--color-surface-secondary);
  backdrop-filter: var(--backdrop-blur-lg);
  border: var(--border-width-thin) solid var(--color-border-subtle);
  color: var(--color-text-secondary);
  cursor: pointer;
  z-index: 10;
  transition: all var(--duration-sm) var(--ease-out);
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: var(--shadow-md);
}

/* Ensure icon inherits color */
.modal-close svg {
  width: 18px;
  height: 18px;
  stroke: currentColor;
  fill: none;
}

.modal-close:hover {
  background-color: var(--color-danger-bg);
  border-color: var(--color-danger-border);
  color: var(--color-danger);
  transform: scale(1.05);
}

.modal-close:hover svg {
  stroke: var(--color-danger);
}

.modal-close:active {
  transform: scale(0.95);
}

/* Dockable Panel Integration */
.dockable-drawing-panel {
  position: fixed;
  background: var(--custom-glass-bg);
  backdrop-filter: var(--backdrop-blur-xl);
  border: var(--border-width-thin) solid var(--color-border-subtle);
  border-radius: var(--radius-xl);
  box-shadow: var(--shadow-float);
  transition: all var(--duration-md) var(--ease-inout);
  z-index: var(--z-dropdown);
}

.dockable-drawing-panel.docked {
  top: var(--spacing-3);
  right: var(--spacing-3);
  width: 400px;
  max-height: calc(100vh - var(--spacing-5));
}

.dockable-drawing-panel.floating {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 80vw;
  max-width: 1200px;
  height: 80vh;
}

.dockable-drawing-panel.minimized {
  height: auto !important;
}

.panel-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--spacing-3) var(--spacing-4);
  background: var(--color-surface-tertiary);
  border-bottom: var(--border-width-thin) solid var(--color-border-subtle);
  border-radius: var(--radius-xl) var(--radius-xl) 0 0;
  cursor: move;
}

.panel-header span {
  color: var(--color-text-primary);
  font-weight: var(--font-weight-semibold);
  font-size: var(--font-size-sm);
}

.panel-controls {
  display: flex;
  gap: var(--spacing-2);
}

.panel-controls button {
  width: 28px;
  height: 28px;
  border-radius: var(--radius-full);
  background: var(--color-button-secondary-bg);
  border: var(--border-width-thin) solid var(--color-border-default);
  color: var(--color-text-primary);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all var(--duration-sm) var(--ease-out);
  font-size: var(--font-size-xs);
}

.panel-controls button:hover {
  background: var(--color-button-secondary-bg-hover);
  transform: scale(1.1);
}

/* Canvas Drawing Mode Integration */
.canvas-drawing-integration {
  position: relative;
}

.drawing-mode-toggle {
  position: fixed;
  top: 80px;
  right: var(--spacing-5);
  padding: var(--spacing-3) var(--spacing-6);
  background: var(--gradient-primary);
  border: none;
  border-radius: var(--radius-pill);
  color: var(--color-white);
  font-weight: var(--font-weight-semibold);
  cursor: pointer;
  transition: all var(--duration-md) var(--ease-out);
  z-index: var(--z-sticky);
  box-shadow: var(--shadow-button-primary);
}

.drawing-mode-toggle:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-button-primary-hover);
}

.drawing-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: var(--z-overlay);
  pointer-events: none;
}

.drawing-overlay .drawing-panel {
  pointer-events: auto;
}

/* Responsive Adjustments */
@media (max-width: 768px) {
  .dockable-drawing-panel.docked {
    width: calc(100vw - var(--spacing-5));
    left: var(--spacing-3);
    right: var(--spacing-3);
  }

  .drawing-modal {
    width: 95vw;
    height: 95vh;
    border-radius: var(--radius-xl);
  }
}

/* Animation Classes */
.slide-in-right {
  animation: slideInRight var(--duration-lg) var(--ease-out);
}

@keyframes slideInRight {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}

.slide-in-left {
  animation: slideInLeft var(--duration-lg) var(--ease-out);
}

@keyframes slideInLeft {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

.fade-in {
  animation: fadeIn var(--duration-md) var(--ease-out);
}

.scale-in {
  animation: scaleIn var(--duration-md) var(--ease-spring);
}

@keyframes scaleIn {
  from {
    transform: scale(0.8);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}
